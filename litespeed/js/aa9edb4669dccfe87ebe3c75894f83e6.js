const API_BASE_URL='https://petbuy-local.ns0.it:8080/wp-json/api/v1/';const PER_PAGE=12;const PRICE_RANGE_FALLBACK=5000;const CART_URL='/carrello/';const ENDPOINTS={ADVERTISEMENTS:'advertisements/read/all',MIXED:'mixed/read/all',PRODUCTS:'products/read/all'};const API_DATA_KEYS={[ENDPOINTS.ADVERTISEMENTS]:'content',[ENDPOINTS.MIXED]:'mixed',[ENDPOINTS.PRODUCTS]:'content'};const SORT_OPTIONS={default:{orderby:'menu_order',order:'asc'},popularity:{orderby:'popularity',order:'desc'},rating:{orderby:'rating',order:'desc'},date:{orderby:'creation_date',order:'desc'},price_asc:{orderby:'price',order:'asc'},price_desc:{orderby:'price',order:'desc'}};let currentSortKey='default';let AD_loadedItemsCount=0;let AD_totalApiResults=0;let MX_loadedItemsCount=0;let MX_totalApiResults=0;let MX_lastApiItemsCount=0;let PR_loadedItemsCount=0;let PR_totalApiResults=0;let currentMinPriceFilter=0;let currentMaxPriceFilter=PRICE_RANGE_FALLBACK;let adManagerInstance;let mxManagerInstance;let prManagerInstance;let isGiftFilterActive=!1;const SELECTORS={FILTERS_WRAPPER:'#api-filters-wrapper',AD_CONTAINER:'#contenuto-1a-desktop .product-list-container-js',AD_LOAD_MORE:'#contenuto-1a-desktop .load-more-btn-js',AD_COUNT:'#contenuto-conteggio .risultati-conteggio-js',MX_CONTAINER:'#contenuto-2a-desktop .product-list-container-js',MX_LOAD_MORE:'#contenuto-2a-desktop .load-more-btn-js',MX_COUNT:'#contenuto-conteggio .risultati-conteggio-js',PR_CONTAINER:'#contenuto-3a-desktop .product-list-container-js',PR_LOAD_MORE:'#contenuto-3a-desktop .load-more-btn-js',PR_COUNT:'#contenuto-conteggio .risultati-conteggio-js',};const MY_TEMPLATE_URI=(typeof window.MyApiSettings!=='undefined'&&window.MyApiSettings.templateUrl)?window.MyApiSettings.templateUrl:'';function resetCategoryFilters(){const settings=typeof window.MyApiSettings!=='undefined'?window.MyApiSettings:null;if(!settings||!settings.apiFiltersWrapper){console.warn("[MyApiSettings] Variabile localizzata non ancora disponibile per resetCategoryFilters. Ignorato.");return}
const wrapperSelector=settings.apiFiltersWrapper;const filterWrapper=document.querySelector(wrapperSelector);if(filterWrapper){const categoryInputs=filterWrapper.querySelectorAll('input[data-filter-type="category"]');categoryInputs.forEach(input=>{if(input.type==='checkbox'||input.type==='radio'){input.checked=!1}})}}
function addToCart(product_id){const CUSTOM_ACTION='custom_api_add_to_cart';const data=new URLSearchParams();data.append('action',CUSTOM_ACTION);data.append('product_id',product_id);data.append('quantity',1);const ajaxUrl=window.ajaxurl||'/wp-admin/admin-ajax.php';fetch(ajaxUrl,{method:'POST',body:data}).then(response=>{if(!response.ok){console.error(`Errore AJAX: Risposta HTTP non OK: ${response.status}`);throw new Error(`Errore HTTP: ${response.status}`)}
return response.json()}).then(result=>{if(result.success){showNotification('success','Prodotto aggiunto al carrello!')}else{const failedId=result.data&&result.data.failed_id_received?` (ID: ${result.data.failed_id_received})`:'';const message=result.data&&result.data.message?result.data.message:'Errore sconosciuto.';console.error('Errore AJAX: Impossibile aggiungere il prodotto al carrello (WC fallito o ID non valido).',{data:{message:message+failedId,success:!1}});showNotification('error','Errore nell\'aggiunta del prodotto. Riprova.')}}).catch(error=>{console.error('Errore AJAX di connessione o HTTP:',error);alert('Impossibile connettersi al server per aggiungere il prodotto. Controllare URL/CORS.')})}
async function updateGiftCount(targetSelector){if(!isGiftFilterActive){console.log('[DEBUG] Conteggio Gift ignorato: filtro non attivo');return}
const targetElement=document.querySelector(targetSelector);if(!targetElement){console.warn('[DEBUG] Elemento target non trovato:',targetSelector);return}
const apiUrl=`${API_BASE_URL}${ENDPOINTS.ADVERTISEMENTS}?page=1&per_page=12&is_gift=true`;console.log('[DEBUG] Chiamata conteggio Gift →',apiUrl);try{const response=await fetch(apiUrl);if(!response.ok)throw new Error(`HTTP error! status: ${response.status}`);const data=await response.json();console.log('[DEBUG] Risposta API Gift:',data);let totalItems=0;if(data.content&&Array.isArray(data.content)){totalItems=data.content.filter(item=>{const val=String(item.is_gift).toUpperCase();return val==='T'}).length;data.content.forEach((item,index)=>{console.log(`[DEBUG] Annuncio ${index}: is_gift =`,item.is_gift)})}else if(data.total_results!==undefined){totalItems=parseInt(data.total_results,10)}
targetElement.textContent=totalItems>0?totalItems:'0';console.log('[DEBUG] Totale annunci regalo filtrati:',totalItems)}catch(error){console.error('❌ Errore nel conteggio Gift:',error);targetElement.textContent='0'}}
function showNotification(type,message,duration=5000){const container=document.getElementById('notification-container');if(!container){console.error("Contenitore #notification-container non trovato. Uso alert() come fallback.");alert(message);return}
const notification=document.createElement('div');notification.className=`custom-notification ${type}`;let contentHTML=`
        <div>${message}</div>
    `;if(type==='success'&&typeof CART_URL!=='undefined'&&CART_URL){contentHTML+=`
            <a href="${CART_URL}" style="color: inherit; font-weight: bold; text-decoration: underline; display: block; margin-top: 5px;">
                Vai al carrello ?
            </a>
        `}
notification.innerHTML=contentHTML;container.appendChild(notification);window.scrollTo({top:0,behavior:'smooth'});setTimeout(()=>{notification.classList.add('show')},10);setTimeout(()=>{notification.classList.remove('show');notification.addEventListener('transitionend',()=>{notification.remove()},{once:!0});setTimeout(()=>{if(notification.parentNode){notification.remove()}},600)},duration)}
function ProductListManager(endpoint,selectors){let currentPage=1;const isAdManager=endpoint===ENDPOINTS.ADVERTISEMENTS;const isMxManager=endpoint===ENDPOINTS.MIXED;const isPrManager=endpoint===ENDPOINTS.PRODUCTS;const currentLoadedItems=()=>{if(isAdManager)return AD_loadedItemsCount;if(isMxManager)return MX_loadedItemsCount;if(isPrManager)return PR_loadedItemsCount;return 0};const currentTotalResults=()=>{if(isAdManager)return AD_totalApiResults;if(isMxManager)return MX_totalApiResults;if(isPrManager)return PR_totalApiResults;return 0};const updateLoadedItems=(value)=>{if(isAdManager){AD_loadedItemsCount=value}else if(isMxManager){MX_loadedItemsCount=value}else if(isPrManager){PR_loadedItemsCount=value}};const updateTotalResults=(value)=>{if(isAdManager){AD_totalApiResults=value}else if(isMxManager){MX_totalApiResults=value}else if(isPrManager){PR_totalApiResults=value}};const updateLastApiItemsCount=(value)=>{if(isMxManager){MX_lastApiItemsCount=value}};const containerElement=document.querySelector(selectors.container);const loadMoreButton=document.querySelector(selectors.loadMore);const filterWrapper=document.querySelector(SELECTORS.FILTERS_WRAPPER);if(!containerElement||!loadMoreButton){return}
function cartClickHandler(e){e.preventDefault();const productId=e.currentTarget.getAttribute('data-product-id');if(productId==='INVALID'){console.error(`Impossibile aggiungere al carrello: ID segnato come INVALIDO dall'API.`);alert('Errore: ID prodotto non valido o assente.');return}
if(productId&&parseInt(productId)>0){addToCart(productId)}else{console.error(`Impossibile aggiungere al carrello: ID nullo o non numerico: ${productId}`);alert('Errore: ID prodotto non valido o mancante. Non posso aggiungere al carrello.')}}
function buildApiUrl(pageNumber){let url=`${API_BASE_URL}${endpoint}?page=${pageNumber}&per_page=${PER_PAGE}`;const filterData=collectFilterParams();const filters=filterData.standardParams;const filterQuery=Object.keys(filters).map(key=>{if(key==='category'){return `categories_slug=${encodeURIComponent(filters[key])}`}
return `${key}=${encodeURIComponent(filters[key])}`}).join('&');if(filterQuery){url+=`&${filterQuery}`}
if(currentMaxPriceFilter>0){const priceRange=`${currentMinPriceFilter}-${currentMaxPriceFilter}`;url+=`&price_range=${priceRange}`}
const sortParams=SORT_OPTIONS[currentSortKey]||SORT_OPTIONS.default;url+=`&order_by=${sortParams.orderby}&order=${sortParams.order}`;console.log(`[API Call] Costruito URL: ${url}`);return url}
function attachCartListeners(){const cartBtns=containerElement.querySelectorAll('.add-to-cart-btn');cartBtns.forEach(btn=>{btn.removeEventListener('click',cartClickHandler);btn.addEventListener('click',cartClickHandler)})}
function collectFilterParams(){const params={};if(filterWrapper){const filterInputs=filterWrapper.querySelectorAll('.api-filter-input');const groupedInputs={};filterInputs.forEach(input=>{const apiValue=input.getAttribute('data-api-value')||input.value;if(!apiValue||String(apiValue).trim()==='')return;if(input.name==='category'&&input.type==='checkbox'&&input.checked){if(!groupedInputs.category){groupedInputs.category=[]}
groupedInputs.category.push(apiValue)}else if((input.type==='radio'||input.type==='checkbox')&&input.checked){params[input.name]=apiValue}else if(input.tagName==='SELECT'){params[input.name]=apiValue}else if(input.type!=='radio'&&input.type!=='checkbox'){params[input.name]=apiValue.trim()}});if(groupedInputs.category&&groupedInputs.category.length>0){params.category=groupedInputs.category.join(',')}}
return{standardParams:params,categoryParam:''}}
function updateCount(newItemsLoaded){const prevLoaded=currentLoadedItems();updateLoadedItems(prevLoaded+newItemsLoaded);if(newItemsLoaded>0||prevLoaded>0){syncCountDisplay(selectors.container)}}
function updateLoadMoreButton(){const loaded=currentLoadedItems();const total=currentTotalResults();const lastLoadedCount=isMxManager?MX_lastApiItemsCount:(loaded%PER_PAGE);if(total>0&&loaded>=total){loadMoreButton.innerHTML='Non ci sono più prodotti da caricare.';loadMoreButton.disabled=!0}else if(total===0&&loaded>0&&lastLoadedCount<PER_PAGE){loadMoreButton.innerHTML='Non ci sono più prodotti da caricare.';loadMoreButton.disabled=!0}else if(total===0&&loaded===0){loadMoreButton.innerHTML='Nessun prodotto disponibile.';loadMoreButton.disabled=!0}else{loadMoreButton.innerHTML='Carica altro ⭣';loadMoreButton.disabled=!1}}
function fetchData(reset=!1){if(reset){updateLoadedItems(0);updateTotalResults(0);currentPage=1;containerElement.innerHTML=''}
const filterData=collectFilterParams();const filters=filterData.standardParams;const sortParams=SORT_OPTIONS[currentSortKey]||SORT_OPTIONS.default;let apiUrl=`${API_BASE_URL}${endpoint}?page=${currentPage}&per_page=${PER_PAGE}&order_by=${sortParams.orderby}&order=${sortParams.order}`;console.log(`[DEBUG] Endpoint attivo: ${endpoint}`);console.log(`[DEBUG] Ordinamento attivo: ${currentSortKey}`);console.log(`[DEBUG] Parametri ordinamento:`,sortParams);console.log(`[DEBUG] URL API generato: ${apiUrl}`);console.log(`[ORDINAMENTO] Chiave: ${currentSortKey}`);console.log(`[ORDINAMENTO] Parametri:`,sortParams);console.log(`[ORDINAMENTO] URL finale: ${apiUrl}`);const filterQuery=Object.keys(filters).map(key=>`${key}=${encodeURIComponent(filters[key])}`).join('&');if(filterQuery){apiUrl+=`&${filterQuery}`}
loadMoreButton.innerHTML='Caricamento...';loadMoreButton.disabled=!0;console.log(`[${endpoint}] FETCH URL: ${apiUrl}`);fetch(apiUrl).then(response=>{if(!response.ok&&response.status!==404){throw new Error(`[${endpoint}] Errore HTTP: ${response.status}. Controllare CORS.`)}
const contentType=response.headers.get("content-type");if(!contentType||!contentType.includes("application/json")){return response.text().then(text=>{console.error(`[${endpoint}] Risposta non JSON. Contenuto:`,text.substring(0,100)+'...');throw new Error(`Risposta API non valida (Status: ${response.status}). Contenuto non JSON.`)})}
return response.json()}).then(data=>{const dataKey=API_DATA_KEYS[endpoint]||'content';let products=data[dataKey]||data.content||data.products||[];console.log(`[DEBUG] Prodotti ricevuti (grezzi): ${products.length}`);console.log(`[DEBUG] Prezzi ricevuti:`,products.map(p=>parseFloat(p.price)));console.log(`[DEBUG] Date ricevute:`,products.map(p=>p.date||p.post_date||'N/D'));if(isPrManager&&currentMinPriceFilter>=0&&currentMaxPriceFilter>0){products=products.filter(item=>{const price=parseFloat(item.price);return!isNaN(price)&&price>=currentMinPriceFilter&&price<=currentMaxPriceFilter})}
const isAdManager=(endpoint===ENDPOINTS.ADVERTISEMENTS);console.log(`[Manager Annunci] Stato Filtro Gift: ${isGiftFilterActive}`);console.log(`[Manager Annunci] E' il Manager Annunci: ${isAdManager}`);console.log(`[Manager Annunci] Condizione Filtro Attiva: ${isAdManager && isGiftFilterActive}`);if(isAdManager&&isGiftFilterActive){products=products.filter(item=>{return item.is_gift==='T'});products.forEach(item=>{if(item.is_gift==='T'){item.name=item.title;item.id=String(item.id).trim()}})}
const newItemsLoaded=products.length;if(data.total_results!==undefined&&data.total_results!==null){let newTotal=parseInt(data.total_results);if(reset&&newTotal===PER_PAGE&&newItemsLoaded>0&&newItemsLoaded<PER_PAGE){console.warn(`[${endpoint}] Totale API ambiguo (${newTotal}). Forza total_results a loaded (${newItemsLoaded}).`);updateTotalResults(newItemsLoaded)}else{updateTotalResults(newTotal)}}else if(data['X-WP-Total']!==undefined){updateTotalResults(parseInt(data['X-WP-Total']))}
updateCount(newItemsLoaded);if(isMxManager){updateLastApiItemsCount(newItemsLoaded)}
if(reset){const apiMin=data.min_price!==undefined?parseFloat(data.min_price):0;const apiMax=data.max_price!==undefined&&parseFloat(data.max_price)>0?parseFloat(data.max_price):PRICE_RANGE_FALLBACK;if(window.noUiSlider){initPriceSlider(apiMin,apiMax)}}
console.log(`[DEBUG] Prodotti pronti per il rendering: ${newItemsLoaded}`);if(newItemsLoaded>0){const euroFormatter=new Intl.NumberFormat('it-IT',{style:'currency',currency:'EUR',minimumFractionDigits:2,maximumFractionDigits:2});const cuoreSvgUrl=MY_TEMPLATE_URI+'/ufficiale/cuore-con-sfondo.svg';const carrelloSvgUrl=MY_TEMPLATE_URI+'/ufficiale/carrello-con-sfondo.svg';if(reset){containerElement.innerHTML=''}
products.forEach(item=>{const productTitle=item.title||item.name||'Titolo non disponibile';const priceValue=parseFloat(item.price);const displayPrice=isNaN(priceValue)?'Prezzo non disponibile':euroFormatter.format(priceValue);const imageUrl=(item.image&&item.image.url)?item.image.url:item.cover||'https://via.placeholder.com/200';const imageAlt=productTitle;const permalink=item.permalink||'#';let productID='0';if(item.id){productID=String(item.id)}
if(!productID||productID==='0'||productID==='INVALID'){if(isAdManager){console.warn(`[${endpoint}] Warning Dati: Chiave 'id' assente per l'elemento "${productTitle}".`);productID='0'}else{console.error(`[${endpoint}] Errore Critico: ID Prodotto non valido o assente per l'elemento "${productTitle}". ID ricevuto: ${productID}`);productID='INVALID'}}
const productInnerHtml=`
        <div class="scheda-prodotto">
            <a href="${permalink}">
				<div class="image-wrapper">
                	<img src="${imageUrl}" alt="${imageAlt}">
				</div>
            </a>
            <div class="container">
                <div class="row align-items-start pb-3">
                    <div class="col-md-6">
                        <div class="noacapo fortablet2 sideshop">${productTitle}</div>
                        <div class="price-container">${displayPrice}</div>
                    </div>
                    <div class="col-md-6 d-flex justify-content-end mt-cuore-pref-tablet">

                        ${!isAdManager ? `<img src="${carrelloSvgUrl}"
class="cornetta-and-co me-2 add-to-cart-btn"
alt="Immagine carrello"
data-product-id="${productID}"
style="cursor: pointer;">` : ''}
                        <img src="${cuoreSvgUrl}" class="cornetta-and-co" alt="Immagine cuore">
                    </div>
                </div>
            </div>
        </div>
    `;const productDiv=document.createElement('div');productDiv.className='col-4 col-md-4';productDiv.innerHTML=productInnerHtml;containerElement.appendChild(productDiv)});attachCartListeners()}else if(reset){containerElement.innerHTML='<p style="text-align: center; width: 100%;">Nessun risultato trovato con i filtri selezionati.</p>'}
updateLoadMoreButton()}).catch(error=>{console.error(error);containerElement.innerHTML=`<p style="color: red; text-align: center; width: 100%;">Errore [${endpoint}]: Impossibile caricare i dati. Controllare URL/CORS/Risposta API.</p>`;loadMoreButton.innerHTML='Errore nel caricamento.';loadMoreButton.disabled=!0})}
loadMoreButton.addEventListener('click',(e)=>{e.preventDefault();if(loadMoreButton.disabled)return;currentPage++;fetchData(!1)});return{init:()=>fetchData(!0),fetchData:fetchData}}
function resetAllGlobalCounts(){AD_loadedItemsCount=0;AD_totalApiResults=0;MX_loadedItemsCount=0;MX_totalApiResults=0;PR_loadedItemsCount=0;PR_totalApiResults=0}
function getActiveManagerInstance(){const adContainer=document.querySelector('#contenuto-1a-desktop');const mxContainer=document.querySelector('#contenuto-2a-desktop');const prContainer=document.querySelector('#contenuto-3a-desktop');if(adContainer&&window.getComputedStyle(adContainer).display!=='none'){return adManagerInstance}else if(mxContainer&&window.getComputedStyle(mxContainer).display!=='none'){return mxManagerInstance}else if(prContainer&&window.getComputedStyle(prContainer).display!=='none'){return prManagerInstance}else{return adManagerInstance}}
function syncCountDisplay(activeManagerContainerSelector){const resultsCountElement=document.querySelector(SELECTORS.AD_COUNT);if(!resultsCountElement)return;let total,loaded;let targetEndpoint;let targetContainerElement;if(activeManagerContainerSelector&&activeManagerContainerSelector.includes('contenuto-1a')){targetEndpoint=ENDPOINTS.ADVERTISEMENTS;targetContainerElement=document.querySelector('#contenuto-1a-desktop')}else if(activeManagerContainerSelector&&activeManagerContainerSelector.includes('contenuto-2a')){targetEndpoint=ENDPOINTS.MIXED;targetContainerElement=document.querySelector('#contenuto-2a-desktop')}else if(activeManagerContainerSelector&&activeManagerContainerSelector.includes('contenuto-3a')){targetEndpoint=ENDPOINTS.PRODUCTS;targetContainerElement=document.querySelector('#contenuto-3a-desktop')}else{const activeInstance=getActiveManagerInstance();if(!activeInstance)return;targetEndpoint=activeInstance.endpoint;if(targetEndpoint===ENDPOINTS.ADVERTISEMENTS)targetContainerElement=document.querySelector('#contenuto-1a-desktop');else if(targetEndpoint===ENDPOINTS.MIXED)targetContainerElement=document.querySelector('#contenuto-2a-desktop');else if(targetEndpoint===ENDPOINTS.PRODUCTS)targetContainerElement=document.querySelector('#contenuto-3a-desktop');}
if(!targetContainerElement||window.getComputedStyle(targetContainerElement).display==='none'){return}
if(targetEndpoint===ENDPOINTS.ADVERTISEMENTS){total=AD_totalApiResults;loaded=AD_loadedItemsCount}else if(targetEndpoint===ENDPOINTS.MIXED){total=MX_totalApiResults;loaded=MX_loadedItemsCount}else if(targetEndpoint===ENDPOINTS.PRODUCTS){total=PR_totalApiResults;loaded=PR_loadedItemsCount}else{return}
let countText;if(total>PER_PAGE){countText=`${loaded} di ${total} Risultati`}else if(loaded>0){countText=`${loaded} Risultati`}else{countText=`Nessun risultato trovato.`}
resultsCountElement.textContent=countText}
function fetchCategories(){const CATEGORIES_ENDPOINT=ENDPOINTS.PRODUCTS;const categoriesUrl=`${API_BASE_URL}${CATEGORIES_ENDPOINT}?per_page=1000`;const categoryContainer=document.getElementById('category-checkbox-list');if(!categoryContainer||categoryContainer.querySelector('input[type="checkbox"]')){return}
categoryContainer.innerHTML='<p>Caricamento categorie in corso...</p>';const dataKey=API_DATA_KEYS[CATEGORIES_ENDPOINT]||'content';fetch(categoriesUrl).then(response=>{if(!response.ok){throw new Error(`Errore HTTP: ${response.status} durante il recupero delle categorie.`)}
return response.json()}).then(data=>{const products=data[dataKey]||data.content||data.products||data.data||[];const uniqueCategories=new Map();products.forEach(product=>{if(Array.isArray(product.categories)&&product.categories.length>0){const categoryData=product.categories[0];const categoryName=categoryData.name;if(categoryName&&categoryName.trim()){uniqueCategories.set(categoryName.trim(),categoryData.image_url||'')}}});const categories=Array.from(uniqueCategories,([name,imageUrl])=>({name,imageUrl})).sort((a,b)=>a.name.localeCompare(b.name));categoryContainer.innerHTML='';if(categories.length>0){categories.forEach((category,index)=>{const categoryName=category.name;const imageUrl=category.imageUrl||MY_TEMPLATE_URI+'/assets/icons/default-icon.png';const id=`cat-${index}-${categoryName.replace(/\s/g, '-')}`;const itemDiv=document.createElement('div');itemDiv.className='form-check category-item';const input=document.createElement('input');input.type='checkbox';input.id=id;input.name='category';input.value=categoryName;input.className='api-filter-input form-check-input me-2';input.style.marginTop='1px';input.addEventListener('change',autoApplyFilter);const icon=document.createElement('img');icon.src=imageUrl;icon.alt=categoryName;icon.className='category-icon-placeholder';const label=document.createElement('label');label.htmlFor=id;label.textContent=categoryName;label.className='form-check-label';const countSpan=document.createElement('span');countSpan.id=`cat-count-${categoryName.replace(/\s/g, '-')}`;countSpan.className='category-count float-end';countSpan.textContent='...';itemDiv.appendChild(input);itemDiv.appendChild(icon);itemDiv.appendChild(label);itemDiv.appendChild(countSpan);categoryContainer.appendChild(itemDiv);fetchCategoryCount(categoryName)});console.log(`[Categories] Checkbox creati. Avvio conteggio prodotti...`)}else{console.warn(`[Categories] Nessuna categoria valida trovata.`);categoryContainer.innerHTML='<p>Nessuna categoria disponibile.</p>'}}).catch(error=>{console.error('Errore critico durante il popolamento delle categorie:',error);categoryContainer.innerHTML='<p style="color: red;">Errore nel caricamento categorie.</p>'})}
function autoApplyFilter(){console.log('[AutoFilter] Cambio Categoria Rilevato. Applico i filtri...');const activeManager=getActiveManagerInstance();if(activeManager){activeManager.fetchData(!0)}else{console.warn('[AutoFilter] Impossibile trovare un ProductListManager attivo per applicare il filtro.')}}
function initPriceSlider(apiMinPrice=0,apiMaxPrice=PRICE_RANGE_FALLBACK){const slider=document.getElementById('price-slider');const minApiInput=document.getElementById('price-min');const maxApiInput=document.getElementById('price-max');const minDisplaySpan=document.getElementById('price-display-min');const maxDisplaySpan=document.getElementById('price-display-max');const MIN_RANGE=Math.floor(apiMinPrice);const MAX_RANGE=Math.ceil(apiMaxPrice);if(!slider||!minApiInput||!maxApiInput||!minDisplaySpan||!maxDisplaySpan||!window.noUiSlider){return}
if(slider.noUiSlider){slider.noUiSlider.destroy()}
if(MIN_RANGE>=MAX_RANGE){return}
let startMin=Math.max(MIN_RANGE,currentMinPriceFilter);let startMax=Math.min(MAX_RANGE,currentMaxPriceFilter);if(startMin===0&&startMax===PRICE_RANGE_FALLBACK){startMin=MIN_RANGE;startMax=MAX_RANGE}
noUiSlider.create(slider,{range:{'min':MIN_RANGE,'max':MAX_RANGE},start:[startMin,startMax],connect:!0,step:1,format:{to:function(value){return Math.round(value)},from:function(value){return Number(value)}}});slider.noUiSlider.on('update',function(values,handle){const value=values[handle];const roundedValue=Math.round(value);const displayValue=new Intl.NumberFormat('it-IT',{style:'currency',currency:'EUR',minimumFractionDigits:0,maximumFractionDigits:0}).format(value);if(handle===0){minDisplaySpan.textContent=displayValue;minApiInput.setAttribute('data-api-value',roundedValue)}else{maxDisplaySpan.textContent=displayValue;maxApiInput.setAttribute('data-api-value',roundedValue)}});slider.noUiSlider.on('set',function(values){currentMinPriceFilter=Math.round(Number(values[0]));currentMaxPriceFilter=Math.round(Number(values[1]));const activeManager=getActiveManagerInstance();if(activeManager){activeManager.fetchData(!0)}});currentMinPriceFilter=startMin;currentMaxPriceFilter=startMax}
function fetchCategoryCount(categoryName){const countUrl=`${API_BASE_URL}${ENDPOINTS.PRODUCTS}?category=${encodeURIComponent(categoryName)}&per_page=1`;const countElement=document.getElementById(`cat-count-${categoryName.replace(/\s/g, '-')}`);if(!countElement){return}
fetch(countUrl).then(response=>response.json()).then(data=>{let totalCount=0;if(data.total_products!==undefined){totalCount=parseInt(data.total_products)}else if(data.total_results!==undefined){totalCount=parseInt(data.total_results)}else if(data['X-WP-Total']!==undefined){totalCount=parseInt(data['X-WP-Total'])}
if(totalCount>=0){countElement.textContent=totalCount}else{countElement.textContent=`0`}
console.log(`[Count] Categoria '${categoryName}': ${totalCount} prodotti.`)}).catch(error=>{console.error(`Errore nel recupero del conteggio per '${categoryName}':`,error);countElement.textContent=`Err`})}
function resetCategoryFilters(){const categoryContainer=document.getElementById('category-checkbox-list');if(categoryContainer){const checkboxes=categoryContainer.querySelectorAll('input[type="checkbox"][name="category"]');checkboxes.forEach(checkbox=>{checkbox.checked=!1});console.log('[Filters] Categorie resettate.')}}
function initSortSelector(){const sortSelect=document.getElementById('product-sort-select');if(!sortSelect)return;const savedSortKey=localStorage.getItem('selectedSortKey');if(savedSortKey&&SORT_OPTIONS[savedSortKey]){currentSortKey=savedSortKey;sortSelect.value=savedSortKey}
sortSelect.addEventListener('change',function(){const selectedKey=this.value;if(SORT_OPTIONS[selectedKey]){currentSortKey=selectedKey;localStorage.setItem('selectedSortKey',selectedKey);const activeManager=getActiveManagerInstance();if(activeManager){activeManager.fetchData(!0)}}else{console.warn(`[Ordinamento] Chiave non valida: ${selectedKey}`)}})}
function resetSortToDefault(){currentSortKey='default';const sortSelect=document.getElementById('product-sort-select');if(sortSelect){sortSelect.value='default';localStorage.setItem('selectedSortKey','default')}}
document.addEventListener('DOMContentLoaded',function(){resetAllGlobalCounts();fetchCategories();initSortSelector();adManagerInstance=ProductListManager(ENDPOINTS.ADVERTISEMENTS,{container:SELECTORS.AD_CONTAINER,loadMore:SELECTORS.AD_LOAD_MORE,count:SELECTORS.AD_COUNT});if(adManagerInstance)adManagerInstance.init();mxManagerInstance=ProductListManager(ENDPOINTS.MIXED,{container:SELECTORS.MX_CONTAINER,loadMore:SELECTORS.MX_LOAD_MORE,count:SELECTORS.MX_COUNT});if(mxManagerInstance)mxManagerInstance.init();prManagerInstance=ProductListManager(ENDPOINTS.PRODUCTS,{container:SELECTORS.PR_CONTAINER,loadMore:SELECTORS.PR_LOAD_MORE,count:SELECTORS.PR_COUNT});if(prManagerInstance)prManagerInstance.init();const giftCheckbox=document.getElementById('filter-gift');if(giftCheckbox){giftCheckbox.addEventListener('change',function(){isGiftFilterActive=this.checked;console.log("Stato Gift Attivo:",isGiftFilterActive);if(isGiftFilterActive){updateGiftCount('#gift-count-span')}
if(adManagerInstance){adManagerInstance.fetchData(!0)}})}
const filterWrapper=document.querySelector(SELECTORS.FILTERS_WRAPPER);if(filterWrapper){const applyBtn=filterWrapper.querySelector('#apply-filters-btn');const resetBtn=filterWrapper.querySelector('#reset-filters-btn');if(applyBtn){applyBtn.addEventListener('click',(e)=>{e.preventDefault();const activeManager=getActiveManagerInstance();if(activeManager)activeManager.fetchData(!0);})}
if(resetBtn){resetBtn.addEventListener('click',(e)=>{e.preventDefault();currentSortKey='default';isGiftFilterActive=!1;currentMinPriceFilter=0;currentMaxPriceFilter=PRICE_RANGE_FALLBACK;filterWrapper.querySelectorAll('.api-filter-input').forEach(input=>{if(input.type==='checkbox'||input.type==='radio'){input.checked=!1}else if(input.tagName==='SELECT'){input.value='default'}else{input.value=''}
input.removeAttribute('data-api-value')});const sortSelect=document.getElementById('product-sort-select');const giftCheckbox=document.getElementById('filter-gift');if(sortSelect){sortSelect.value='default'}
if(giftCheckbox){giftCheckbox.checked=!1}
const activeManager=getActiveManagerInstance();if(activeManager)activeManager.fetchData(!0);})}}
document.querySelectorAll('.section-switch-btn').forEach(button=>{button.addEventListener('click',(e)=>{const targetContainerId=e.currentTarget.getAttribute('data-product-container');if(!targetContainerId){return}
resetSortToDefault();const activeManager=getActiveManagerInstance();if(activeManager){activeManager.fetchData(!0)}
console.log('[DEBUG] Ordinamento resettato e fetch rilanciato dopo switch');setTimeout(()=>syncCountDisplay(targetContainerId),50)})});const categoryResetLink=document.getElementById('category-reset-btn');if(categoryResetLink){categoryResetLink.addEventListener('click',function(event){event.preventDefault();resetCategoryFilters();const applyBtn=document.getElementById('apply-filters-btn');if(applyBtn){applyBtn.click()}})}})
;