/******* Do not edit this file *******
Simple Custom CSS and JS - by Silkypress.com
Saved: Nov 27 2024 | 23:54:38 */
const configureOptions = {
    triggerOpen : "#menu-trigger",  // evento click non riconosciuto propriamente
    triggerClose : "#close",
    catURL : "http://petbuy.local/wp-content/uploads/petbuy-menu-special/categorie.json",   // file JSON con le categorie del menuù
	menuContainer : "#el-html-container"
  }

let shrink = 0;
  
  const animations = ["swipe-right 0.5s ease-in-out", "swipe-left 0.5s ease-in-out", "swipe-up 0.5s ease-in-out"];  // animazioni implementate
  let prevCatClicked = 0;  // usata per impedire il caricamento dello stesso sottomenu al click -> 0 all'avvio, in quanto nessun pannello mai aperto
  
  function isMobile() {
      if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i)
          || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i))
          return true
      return false
  }
  
  async function loadCategories() {  // carichiamo il file e lo restituiamo come oggetto JSON
      const response = await fetch(configureOptions.catURL);
      return response.json();
  }
  
  
  function loadSubCatPanel() {
      jQuery(document).on("click", ".aside-list-item", function () {  // evento 'click' delegato al document
		  jQuery("#close-area").css("background-image", "unset");
          const id = jQuery(this).data("cat-id");  // prendiamo cat-id della categoria di cui mostare le sottocategorie
          if (id == prevCatClicked)
              return;  // controlliamo che la categoria cliccata, non abbia il pannello sottocategorie giÃ  in primo piano
          jQuery('.aside-list-item').removeClass("active");  // rimuoviamo da tutti gli elementi 'active'
          jQuery(this).addClass("active"); // blocchiamo la linea bianca per mettere in risalto quale categoria ha aperto l'utente
          jQuery('#right-side-menu > div.panel').removeClass("visible");  // rimuoviamo la classe 'visible' al pannello aperto precedentemente
          prevCatClicked = id;  // salviamo il pannello aperto al momento
          const animation = Math.floor(Math.random() * 3);  // scegliamo tra le 3 'animations' disponibili
  
          jQuery(jQuery("#right-side-menu").find(`[data-panel-id='${id}']`)).css("animation", animations[animation]);  // troviamo il pannello da aprire e aggiungiamo l'animazione
          jQuery("#right-side-menu").find(`[data-panel-id='${id}']`).addClass("visible");  // aggiungiamo la classe visible -> pannello in primo piano
          setTimeout(() => {
              jQuery(jQuery("#right-side-menu").find(`[data-panel-id='${id}']`)).css("animation", "");
          }, 500);  // rimuoviamo l'animazione dopo la terminazione, altrimenti il pannello 'n' non sarÃ  animato al prossimo evento 
      });
  }
  
  function categoriesForDesktop(categories) {
	  jQuery("div#right-side-menu").append(`
					<div class="panel hidden visible" data-panel-id="0">
							<div class = "start-menu-page">
								<img src = "http://petbuy.local/wp-content/uploads/2023/10/petbuy-personaggi-banner.png" class="banner-pt-menu" loading="lazy">
									<a href="http://petbuy.local/#" class="button pt-an-btn" id="go-to-shop">Vai al fumetto</a>
							</div>
					</div>
		`);
	  let i;
      categories.forEach(category => {
          jQuery("ul#left-list").append(`<li class="aside-list-item aside-anchor" data-cat-id="${category.id}" >${category.name}</li>`);
          const image = `<div class="aside-image">
                              <img src="${category.image}" class="menu-image" loading ="lazy">
                         </div>`;
          let subCategoriesList = `<ul class="aside-list grid-list subcategories">`;
		  i = 1;
          category.subcategories.forEach(subcategory => {
			  if (i == 2 || i == 5 || i == 8)
			  {
				  subCategoriesList += `<li class ="align-center"><a href="${subcategory.link}" class="aside-anchor">${subcategory.name}</a></li>`;
				  //console.log(i + subcategory.name)
			  }

			  else if (i == 3 || i == 6 || i == 9)
			  {
				  subCategoriesList += `<li class="align-end"><a href="${subcategory.link}" class="aside-anchor">${subcategory.name}</a></li>`;
			  }
			  else
				  subCategoriesList += `<li><a href="${subcategory.link}" class="aside-anchor">${subcategory.name}</a></li>`;
			  i++;
          })
          subCategoriesList += "</ul>";
          jQuery("div#right-side-menu").append(`<div class="panel hidden" data-panel-id="${category.id}">` + image + subCategoriesList + "</div");
      });
  
  }
  
  function categoriesForMobile(params) {
      
  }

function shrinkHeaderOnOpen(){
	if (jQuery("header").hasClass("elementor-sticky--effects")){
		shrink = 0;
		return;
	}
	else{
		jQuery("header").addClass("elementor-sticky--effects");
		shrink = 1;
		return
	}
}

function shrinkHeaderOnClose(closeType){
	if (!jQuery("header").hasClass("elementor-sticky--effects") || shrink == 1){
		jQuery("header").removeClass("elementor-sticky--effects");
	}
	else 
		return
		
}

function clearSearchForm()
{
	jQuery(".aws-search-field").val("");
	jQuery(".aws-search-result").empty();
}
  
  function openMenu() {
      jQuery(document).on("focus click", configureOptions.triggerOpen, function () {
		  jQuery(configureOptions.triggerOpen).addClass("focus");
		  jQuery(configureOptions.menuContainer).css("background", "rgba(24,24,24,0.6)");
		  jQuery("#close-area").css("background-image", "linear-gradient(220deg, #cddde4, #a6e5ea)");
		  shrinkHeaderOnOpen();
		 setTimeout(() => {
			 
			  jQuery("html").css("overflow", "hidden");
			  jQuery("#el-html-container").addClass("ct-visible");
			  jQuery(".aside-right").addClass("show-right");
			  jQuery(".aside-left").addClass("show-left");
          }, 40);
      });
  }

function closeMenu()
{
	jQuery(jQuery("#right-side-menu").find(`[data-panel-id='${prevCatClicked}']`)).removeClass("visible");
	jQuery("#close-area").css("background-image", "unset");
	clearSearchForm()
	jQuery(configureOptions.triggerOpen).removeClass("focus");
		  setTimeout(() => {
			  jQuery(".aside-right").removeClass("show-right");
			  jQuery(".aside-left").removeClass("show-left");
          }, 50);
		  jQuery(configureOptions.menuContainer).css("background", "");
		  setTimeout(() => {
			  jQuery("html").css("overflow", "auto");
			  jQuery("#el-html-container").removeClass("ct-visible");
			  shrinkHeaderOnClose();
			  jQuery("#right-side-menu").find(`[data-panel-id='${0}']`).addClass("visible");
          }, 520);
}
  
function closeMenuOnX() 
{	  
      jQuery(document).on("click", configureOptions.triggerClose, function () {
		  closeMenu()
      });
}

function closeMenuOnGoToShop()
{	  
      jQuery(document).on("click", "#go-to-shop", function () {
		  closeMenu()
      });
}


function closeMenuOnClickDoc()
{
	jQuery(document).on('click touch', configureOptions.menuContainer, function(e) {
    var container = jQuery('#container-petbuy-menu');

    if (jQuery(e.target).closest(container).length == 0) {
      closeMenu()
    }
  });
}


jQuery(document).ready(function () {
    loadCategories().then((data) => { // prendiamo le categorie che ci restituisce 'loadCategories' e costruiamo sia l'UI delle categorie e i pannelli delle sottocategorie
        const categories = data['categories'];
        categoriesForDesktop(categories)

    })
    .catch((error) => {
            console.log("error");
        })
    openMenu()
    closeMenuOnX()
    loadSubCatPanel()
	closeMenuOnClickDoc()
	closeMenuOnGoToShop()
});

